/**	
 *  @file cpmu.c
 *  
 * 	@brief Contains Clock and power management unit API routines for MagniV devices.
 * 	
 *	@author Manuel Rodriguez
 *  
 */
/*
 * History:
 * 
 * 		Rev 1.0 Initial Release
 * 		
 * */

/* Include derivative support */
#include "derivative.h"
#include "cpmu.h"
#include "common.h"


/** Initializes the Bus clock at the desired speed.
 * 
 * 	@param[in] BusClock Desired Bus Clock Frequency in hertz
 * 	
 * */
void clock_init(unsigned long BusClock){
	clock_dividers prescalers;
	prescalers = calc_prs(BusClock*2);
}


/** Calculate the prescaler values for the corresponding bus frequency.
 * 
 * @param[in] FPLL Desired PLL frequency (bus frequency * 2) in hertz
 * @param[in] ExtClock If an External oscillator is being used set this variable to TRUE (1) otherwise set to FALSE (0)
 * @param[in] ExtFreq  If an oscillator is being used pass the frequency of the oscillator, otherwise pass FALSE (0)
 * 
 * @return A structure with the values of the prescalers
 * 
 * */
clock_dividers calc_prs(unsigned long FPLL, unsigned char ExtClock, unsigned long ExtFreq){
	clock_dividers prs;
	
	/* Check if Fpll = Fvco is possible */
	if((FPLL >= VCO_MIN) && (FPLL <= VCO_MAX)){
		prs.postdiv = 0;		/* FPLL = FVCO / (POSTDIV + 1) -> FPLL = FVCO */
		prs.syndiv = (FPLL / (2 * Fref)) - 1;
	}
	unsigned long freq = (FPLL / 2000000) - 1;
	if(freq < 0)
		freq = 1;
	
}

#ifdef _MC9S12ZVL32_H /* S12ZVL32 specific functions */

#endif /* END of S12ZVL32 specific functions */
